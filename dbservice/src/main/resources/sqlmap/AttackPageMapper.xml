<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.operational.platform.dbservice.dao.AttackPageMapper" >
    <resultMap id="BaseResultMap" type="com.operational.platform.dbservice.model.AttackPage" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="link" property="link" jdbcType="VARCHAR" />
        <result column="point_link" property="pointLink" jdbcType="VARCHAR" />
        <result column="belong" property="belong" jdbcType="VARCHAR" />
        <result column="category" property="category" jdbcType="VARCHAR" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.operational.platform.dbservice.model.AttackPage" extends="BaseResultMap" >
        <result column="attr" property="attr" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, title, link, point_link, belong, category, count, update_time, create_time
    </sql>
    <sql id="Blob_Column_List" >
        attr
    </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.operational.platform.dbservice.model.AttackPageExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_attack_page
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.operational.platform.dbservice.model.AttackPageExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from t_attack_page
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_attack_page
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_attack_page
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.operational.platform.dbservice.model.AttackPageExample" >
        delete from t_attack_page
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.operational.platform.dbservice.model.AttackPage" >
        insert into t_attack_page (id, title, link,
        point_link, belong, category,
        count, update_time, create_time,
        attr)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
        #{pointLink,jdbcType=VARCHAR}, #{belong,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR},
        #{count,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP},
        #{attr,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.operational.platform.dbservice.model.AttackPage" >
        insert into t_attack_page
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="link != null" >
                link,
            </if>
            <if test="pointLink != null" >
                point_link,
            </if>
            <if test="belong != null" >
                belong,
            </if>
            <if test="category != null" >
                category,
            </if>
            <if test="count != null" >
                count,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="attr != null" >
                attr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="link != null" >
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="pointLink != null" >
                #{pointLink,jdbcType=VARCHAR},
            </if>
            <if test="belong != null" >
                #{belong,jdbcType=VARCHAR},
            </if>
            <if test="category != null" >
                #{category,jdbcType=VARCHAR},
            </if>
            <if test="count != null" >
                #{count,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="attr != null" >
                #{attr,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.operational.platform.dbservice.model.AttackPageExample" resultType="java.lang.Integer" >
        select count(*) from t_attack_page
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update t_attack_page
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null" >
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.link != null" >
                link = #{record.link,jdbcType=VARCHAR},
            </if>
            <if test="record.pointLink != null" >
                point_link = #{record.pointLink,jdbcType=VARCHAR},
            </if>
            <if test="record.belong != null" >
                belong = #{record.belong,jdbcType=VARCHAR},
            </if>
            <if test="record.category != null" >
                category = #{record.category,jdbcType=VARCHAR},
            </if>
            <if test="record.count != null" >
                count = #{record.count,jdbcType=INTEGER},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.attr != null" >
                attr = #{record.attr,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map" >
        update t_attack_page
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        link = #{record.link,jdbcType=VARCHAR},
        point_link = #{record.pointLink,jdbcType=VARCHAR},
        belong = #{record.belong,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        count = #{record.count,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        attr = #{record.attr,jdbcType=LONGVARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update t_attack_page
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        link = #{record.link,jdbcType=VARCHAR},
        point_link = #{record.pointLink,jdbcType=VARCHAR},
        belong = #{record.belong,jdbcType=VARCHAR},
        category = #{record.category,jdbcType=VARCHAR},
        count = #{record.count,jdbcType=INTEGER},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.operational.platform.dbservice.model.AttackPage" >
        update t_attack_page
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="link != null" >
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="pointLink != null" >
                point_link = #{pointLink,jdbcType=VARCHAR},
            </if>
            <if test="belong != null" >
                belong = #{belong,jdbcType=VARCHAR},
            </if>
            <if test="category != null" >
                category = #{category,jdbcType=VARCHAR},
            </if>
            <if test="count != null" >
                count = #{count,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="attr != null" >
                attr = #{attr,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.operational.platform.dbservice.model.AttackPage" >
        update t_attack_page
        set title = #{title,jdbcType=VARCHAR},
        link = #{link,jdbcType=VARCHAR},
        point_link = #{pointLink,jdbcType=VARCHAR},
        belong = #{belong,jdbcType=VARCHAR},
        category = #{category,jdbcType=VARCHAR},
        count = #{count,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        attr = #{attr,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.operational.platform.dbservice.model.AttackPage" >
        update t_attack_page
        set title = #{title,jdbcType=VARCHAR},
        link = #{link,jdbcType=VARCHAR},
        point_link = #{pointLink,jdbcType=VARCHAR},
        belong = #{belong,jdbcType=VARCHAR},
        category = #{category,jdbcType=VARCHAR},
        count = #{count,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 根据所属源查找 -->
    <select id="listByBelong" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from t_attack_page
        where belong = #{belong,jdbcType=VARCHAR}
        <!--AND id in(61859,63019)-->
        AND COUNT =0 limit 500
    </select>
    <select id="listByCondition" resultMap="BaseResultMap" parameterType="com.operational.platform.dbservice.model.AttackPage">
        select
        <include refid="Base_Column_List"/>
        from t_attack_page
        where 1=1
        <if test="link != null">
            and link = '${link}'
        </if>
    </select>
</mapper>