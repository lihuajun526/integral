<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.operational.platform.dbservice.dao.GoodsMapper" >
    <resultMap id="BaseResultMap" type="com.operational.platform.dbservice.model.Goods" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="price" property="price" jdbcType="INTEGER" />
        <result column="photo" property="photo" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="effective_time" property="effectiveTime" jdbcType="TIMESTAMP" />
        <result column="days" property="days" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, title, description, sort, price, photo, status, effective_time, days, create_time,
        update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.operational.platform.dbservice.model.GoodsExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from t_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_goods
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_goods
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.operational.platform.dbservice.model.GoodsExample" >
        delete from t_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.operational.platform.dbservice.model.Goods" >
        insert into t_goods (id, title, description,
        sort, price, photo,
        status, effective_time, days,
        create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
        #{sort,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{photo,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER}, #{effectiveTime,jdbcType=TIMESTAMP}, #{days,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.operational.platform.dbservice.model.Goods" >
        insert into t_goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="photo != null" >
                photo,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="effectiveTime != null" >
                effective_time,
            </if>
            <if test="days != null" >
                days,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="price != null" >
                #{price,jdbcType=INTEGER},
            </if>
            <if test="photo != null" >
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="effectiveTime != null" >
                #{effectiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="days != null" >
                #{days,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.operational.platform.dbservice.model.GoodsExample" resultType="java.lang.Integer" >
        select count(*) from t_goods
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update t_goods
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null" >
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null" >
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.sort != null" >
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=INTEGER},
            </if>
            <if test="record.photo != null" >
                photo = #{record.photo,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.effectiveTime != null" >
                effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.days != null" >
                days = #{record.days,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update t_goods
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        sort = #{record.sort,jdbcType=INTEGER},
        price = #{record.price,jdbcType=INTEGER},
        photo = #{record.photo,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        effective_time = #{record.effectiveTime,jdbcType=TIMESTAMP},
        days = #{record.days,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.operational.platform.dbservice.model.Goods" >
        update t_goods
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=INTEGER},
            </if>
            <if test="photo != null" >
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="effectiveTime != null" >
                effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
            </if>
            <if test="days != null" >
                days = #{days,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.operational.platform.dbservice.model.Goods" >
        update t_goods
        set title = #{title,jdbcType=VARCHAR},
        description = #{description,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=INTEGER},
        price = #{price,jdbcType=INTEGER},
        photo = #{photo,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        effective_time = #{effectiveTime,jdbcType=TIMESTAMP},
        days = #{days,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="listByCondition" resultMap="BaseResultMap" parameterType="com.operational.platform.dbservice.model.Goods">
        select
        <include refid="Base_Column_List"/>
        from t_goods
        <if test="status != null">
            where status = #{status,jdbcType=INTEGER}
        </if>
    </select>

    <select id="selectByTypeAndVipType" resultMap="BaseResultMap" parameterType="com.operational.platform.dbservice.model.Goods">
        select
        <include refid="Base_Column_List"/>
        from t_goods
        where type = #{type,jdbcType=INTEGER}
        and vip_type = #{vipType,jdbcType=INTEGER}
    </select>
</mapper>