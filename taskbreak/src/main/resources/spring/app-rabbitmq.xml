<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

    <!--<context:property-placeholder location="classpath:properties/mq-backstage.properties" ignore-unresolvable="true"/>-->

    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
    <rabbit:annotation-driven/>
    <task:executor id="taskExecutor" pool-size="4-64" queue-capacity="100"/>
    <bean id="rabbitListenerContainerFactory"
          class="org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="concurrentConsumers" value="${filter.schedule.mq.concurrentConsumers}"/>
        <property name="maxConcurrentConsumers" value="${filter.schedule.mq.maxConcurrentConsumers}"/>
        <!--json-->
        <property name="messageConverter" ref="jsonMessageConverter"/>
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="channelTransacted" value="true"/>
        <property name="acknowledgeMode" value="MANUAL"/>
    </bean>

    <bean id="connectionFactory"
          class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
        <property name="addresses" value="${filter.schedule.mq.addresses}"/>
        <property name="username" value="${filter.schedule.mq.username}"/>
        <property name="password" value="${filter.schedule.mq.password}"/>
        <property name="virtualHost" value="${filter.schedule.mq.virtualHost}"/>
        <property name="connectionTimeout" value="${filter.schedule.mq.connectionTimeout}"/>
        <property name="connectionLimit" value="${filter.schedule.mq.connectionLimit}"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>
    <!--银行优惠Template-->
    <bean id="bankCouponSpiderProducerTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
        <constructor-arg ref="connectionFactory"/>
        <!--<property name="exchange" value="${filter.schedule.spider.exchange}"/>-->
        <!--<property name="routingKey" value="${filter.schedule.spider.routingKey}"/>-->
        <property name="retryTemplate" ref="retryTemplate"/>
        <!--json-->
        <property name="messageConverter" ref="jsonMessageConverter"/>
    </bean>

    <!--爬取命令Template-->
    <bean id="cmdTemplate" class="org.springframework.amqp.rabbit.core.RabbitTemplate">
        <constructor-arg ref="connectionFactory"/>
        <property name="exchange" value="${filter.schedule.cmd.exchange}"/>
        <property name="routingKey" value="${filter.schedule.cmd.routingKey}"/>
        <property name="retryTemplate" ref="retryTemplate"/>
        <property name="messageConverter" ref="jsonMessageConverter"/>
    </bean>
    <!--重试机制-->
    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
                <property name="initialInterval" value="500"/>
                <property name="multiplier" value="2.0"/>
                <property name="maxInterval" value="3000"/>
            </bean>
        </property>
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                <property name="maxAttempts" value="3"/>
            </bean>
        </property>
    </bean>

    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"></bean>

    <!--配置监听-->
    <rabbit:queue id="cmd_queue" name="${filter.schedule.spider.listener.queue}" durable="true" auto-delete="false"
                  exclusive="false"/>
    <rabbit:direct-exchange name="${filter.schedule.spider.listener.exchange}" durable="true" auto-delete="false">
        <rabbit:bindings>
            <rabbit:binding queue="cmd_queue"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <bean name="cmdListener" class="com.vip.taskbreak.MqListener"></bean>
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="${filter.schedule.spider.listener.queue}" ref="cmdListener"/>
    </rabbit:listener-container>

</beans>